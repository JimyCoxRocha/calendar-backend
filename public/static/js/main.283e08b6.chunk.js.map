{"version":3,"sources":["components/helpers/fetch.js","components/types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","components/reducers/authReducer.js","components/reducers/calendarReducer.js","components/reducers/uiReducer.js","components/reducers/rootReducer.js","components/store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","authLogout","useForm","initialState","useState","formState","setFormState","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","validator","isEmail","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","trim","length","console","log","Navbar","useSelector","state","auth","onClick","dispath","removeItem","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","timeStart","minutes","seconds","add","timeEnd","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","id","getState","eventoGuardado","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","locale","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRaiud","opacity","display","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","PrivateRoute","Component","component","isAuthenticated","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.283e08b6.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = \"GET\" ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`; //https://localhost:4000/api\r\n\r\n    if( method === \"GET\" ){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    \r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventRestart: '[event] Events restart',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchWithoutToken, fetchWithToken } from \"../components/helpers/fetch\"\r\nimport { types } from \"../components/types/types\"\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken( \"auth\", { email, password }, \"POST\" )\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){//Porque el API retorna un OK: y el token:\r\n            localStorage.setItem( \"token\", body.token );\r\n            localStorage.setItem( \"token-init-date\", new Date().getTime() );//Porque el token expira 2 horas después\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken( \"auth/new\", { email, password, name }, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if( body.ok === true ){\r\n            console.log(\"Se ha creado el usuario\");\r\n            localStorage.setItem( \"token\", body.token );\r\n            localStorage.setItem( \"token-init-date\", new Date().getTime() );//Porque el token expira 2 horas después\r\n            \r\n            dispatch( login({ \r\n                uid: body.uid, \r\n                name: body.name }));\r\n        }else{\r\n            Swal.fire(\"error\", body.msg, \"error\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n});\r\n\r\nexport const startAuthLogout = () => {\r\n    return ( dispath ) => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"token-init-date\");\r\n\r\n        dispath( authLogout() );\r\n    }\r\n}\r\nexport const authLogout = () => ({\r\n    type: types.authLogout\r\n})","import {useState} from \"react\";\r\n\r\nexport const useForm = ( initialState )=>{\r\n    /*Es un excelente Custom Hooks. DEBO APRENDER*/\r\n    /*Nos retorna la función para cambiar el state. Además, el setSTate obtiene el nombre\r\n    del argumento 'name' y lo cambia. Por eso el targe. Del targer extraemos el nombre y el value*/\r\n    const [ formState, setFormState ] = useState(initialState);\r\n\r\n    const reset = () =>{\r\n        setFormState(initialState);\r\n    }\r\n    const handleInputChange = ({target}) =>{\r\n        setFormState({\r\n            ...formState,\r\n            [target.name] : target.value\r\n        });\r\n    }\r\n    \r\n    return [formState, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport './login.css';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: \"\",\r\n        lPassword: \"\"\r\n    });\r\n    \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: \"\",\r\n        rEmail: \"\",\r\n        rPassword1: \"\",\r\n        rPassword2: \"\"\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const esEmail = validator.isEmail( lEmail );\r\n        if( !esEmail ){\r\n            Swal.fire(\r\n                'Email or Password Error',\r\n                'Please, write a email o password',\r\n                'error'\r\n              )\r\n              return;\r\n        }\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const esEmail = validator.isEmail( rEmail );\r\n        if( !esEmail || rPassword1.trim().length <= 5 ){\r\n            Swal.fire(\r\n                'Error',\r\n                'Please, write a email or valid password',\r\n                'error'\r\n              )\r\n              return;\r\n        }\r\n        if( rPassword1 !== rPassword2 ){\r\n            Swal.fire(\r\n                'Error',\r\n                'The passwords are not the same',\r\n                'error'\r\n              )\r\n            return;\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value= { lEmail }\r\n                                onChange = { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value= { lPassword }\r\n                                onChange = { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit = { handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = \"rName\"\r\n                                value = { rName }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = \"rEmail\"\r\n                                value = { rEmail }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name = \"rPassword1\"\r\n                                value = { rPassword1 }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name = \"rPassword2\"\r\n                                value = { rPassword2 }\r\n                                onChange = { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startAuthLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickLogout = () => {\r\n\r\n        dispatch( startAuthLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\" navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick = { handleClickLogout }>\r\n                <i className =\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { name } = useSelector( state => state.auth );\r\n    const { title } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <br></br>\r\n            <strong> - { name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../components/types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal,\r\n})\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal,\r\n})","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../components/helpers/fetch\"\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../components/types/types\"\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid, name } = getState().auth;\r\n        try{\r\n            const resp = await fetchWithToken(\"events\", event, \"POST\");\r\n            const body = await resp.json();\r\n            if( body.ok ){\r\n                event.id = body.eventoGuardado.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) );//usamos el evento de arriba porque es el que se que funciona\r\n            }\r\n        }catch (error) {\r\n            console.log( error );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => (\r\n    {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n)\r\nexport const eventSetActive = ( event ) => (\r\n    {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n)\r\nexport const eventClearActiveEvent = ( event ) => (\r\n    {\r\n        type: types.eventClearActiveEvent\r\n    }\r\n)\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n        try{\r\n            \r\n            const resp = await fetchWithToken(`events/${ event.id }`, event, \"PUT\");\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            }else{\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        }catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDelete = (  ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        \r\n        try{\r\n            \r\n            const resp = await fetchWithToken(`events/${ id }`, {}, \"DELETE\");\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventDeleted( id ) );\r\n            }else{\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        }catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => (\r\n    {\r\n        type: types.eventUpdated,\r\n        payload: event\r\n    }\r\n)\r\nconst eventDeleted = (  ) => (\r\n    {\r\n        type: types.eventDeleted,\r\n    }\r\n)\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n        try{\r\n            const resp = await fetchWithToken( \"events\" );\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.msg);\r\n            \r\n            dispatch( eventLoaded( events ) );\r\n        }catch (error){\r\n\r\n        }\r\n        //console.log( \"????\" );\r\n    }\r\n}\r\n\r\nexport const eventRestart = () => ({\r\n    type: types.eventRestart\r\n})\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root')\r\nconst timeStart = (moment().minutes(0).seconds(0).add(1,\"hours\")).toDate();\r\nconst timeEnd = (moment().minutes(0).seconds(0).add(2,\"hours\")).toDate();\r\n\r\nconst initEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: timeStart,\r\n    end: timeEnd\r\n};//Para que no se vuelva a generar\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState( timeStart );\r\n    const [dateEnd, setDateEnd] = useState( timeEnd );\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    //Para conservar información del evento seleccionado\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues( activeEvent );\r\n        } else{\r\n            setFormValues( initEvent );\r\n        }\r\n        \r\n    }, [ activeEvent, setFormValues ])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    const closeModal = () => {\r\n        //TODO: Cerrar Modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        //onChange(  );\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        //onChange(  );\r\n        setDateEnd( e );\r\n        // console.log(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire(\r\n                \"error\",\r\n                \"La fecha fin, debe ser mayor a la de inicio\",\r\n                \"error\"\r\n            );\r\n        }\r\n        \r\n        \r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        }else{\r\n            //TODO: Realziar grabación\r\n            dispatch( eventStartAddNew({...formValues}) );            \r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { ( activeEvent )? \"Editar Evento\" : \"Crear Nuevo Evento\" } </h1>\r\n            <hr />\r\n            <form \r\n                onSubmit={ handleSubmitForm }\r\n                className=\"container\"\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ (activeEvent) ? activeEvent.start : dateStart }\r\n                        className=\"form-control\"\r\n                        />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ (activeEvent) ? activeEvent.end : dateEnd }\r\n                        minDate = { dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && \"is-invalid\"}` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","//floating action button\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick= { handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\" ></i>\r\n        </button>\r\n    )   \r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className =\"btn btn-danger fab-danger\"\r\n            onClick = { handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from \"moment\";\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventRestart, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"moment/locale/es\";//importación para cambiar el idioma\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\nmoment.locale(\"es\");\r\n\r\nexport const CalendarScreen = () => {\r\n    const [lastView, setLastView] = useState( localStorage.getItem(\"lastWiew\") || \"month\");\r\n    const dispatch = useDispatch();\r\n    //TODO: Leer dek store los eventos\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n        return () => {\r\n            localStorage.setItem(\"token\", \"\");\r\n            dispatch( eventRestart() );\r\n            \r\n        }\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = ( e )=>{\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n\r\n    }\r\n    const onViewChange = (e) => {\r\n        setLastView( e )\r\n        localStorage.setItem(\"lastWiew\", e);\r\n    }\r\n\r\n    const onSelectSlot = ( e ) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor : \"#367CF7\",\r\n            borderRaiud: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\"\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages = { messages }\r\n                eventPropGetter = { eventStyleGetter } //Evento Click\r\n                components= {{\r\n                    event: CalendarEvent//quiero que el evento event sea pasado a el componente\r\n                }}\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent = { onSelectEvent }\r\n                onSelectSlot = { onSelectSlot }\r\n                selectable= { true }\r\n                onView= { onViewChange }\r\n                view= { lastView }\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n            \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component= { ( props ) => ( \r\n                isAuthenticated \r\n                ?\r\n                    <Component { ...props }/>\r\n                :\r\n                    <Redirect to=\"/login\"/>\r\n            ) }\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...rest\r\n}\r\n) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component= { \r\n                ( props ) => ( \r\n                    !isAuthenticated \r\n                    ?\r\n                        <Component { ...props }/>\r\n                    :\r\n                        <Redirect to=\"/\"/>\r\n                )\r\n            }\r\n        />\r\n    )\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { types } from '../components/types/types';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        if( !!localStorage.getItem(\"token\") ){\r\n            dispatch( startChecking() );\r\n        }else{\r\n            dispatch( { type: types.authCheckingFinish } );\r\n        }\r\n\r\n    }, [ dispatch ]);\r\n\r\n    if( checking ){\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                \r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        isAuthenticated = { !!uid }\r\n                        component={ LoginScreen }>\r\n                    </PublicRoute>\r\n                    \r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        isAuthenticated = { !!uid }\r\n                        component={ CalendarScreen }>\r\n                    </PrivateRoute>\r\n                    \r\n                </Switch>\r\n                {/* \r\n                    //Exact /login - LoginScreen\r\n                    //Exact / -CalendarScreen\r\n                */}\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = ( state= initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n                checking: false,\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n/* {\r\n    id: new Date().getTime(),\r\n    title: \"Cumpleaños del jefe\",\r\n    start: moment().toDate(),\r\n    end: moment().add(2, \"hour\").toDate(),\r\n    user: {\r\n        _id: \"123\",\r\n        name: \"Jimito\"\r\n    }\r\n} */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => ( event.id === action.payload.id ) ? action.payload : event\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => ( event.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events : [ ...action.payload ]\r\n            }\r\n        case types.eventRestart:\r\n            return {\r\n                ...initialState\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{ \r\n                ...state,\r\n                modalOpen: true\r\n             }\r\n        case types.uiCloseModal:\r\n            return{ \r\n                ...state,\r\n                modalOpen: false\r\n             }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    //TODO: AuthReducer\r\n    //TODO: CalendarReducer\r\n});\r\n\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(//<- Para ver por el navegador en l apestaña Redux\r\n        applyMiddleware(thunk)//<- Para aplicar el middlewere\r\n    )\r\n);","import React from 'react';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './components/store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store = { store }>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\n\nimport \"./styles.css\"\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}